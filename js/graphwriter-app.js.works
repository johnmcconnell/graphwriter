var JEM = {};

JEM.pixelStrToInt = function(str) {
	return parseInt(str.substr(str.length - 2));
}

JEM.intToPixelStr = function(i) {
	return i + 'px';
}

JEM.nodeToCircle = function(node) {
	var r = JEM.intToPixelStr(node.r);
	return {cx:node.x, cy:node.y, r:r, fill:node.color};
}

JEM.circleToNode = function(circle) {
	var r = JEM.pixelStrToInt(circle.r);
	return {x:circle.cx, y:circle.cy, r:r, color:circle.fill};
}

JEM.createView = function(selection,model,renderer) {
	return { 
		model: model,
		selection: selection,
		render: renderer,
		update: function() {
			var model = this.model;
			this.selection = this.selection.data(
				model,
				function(item) { return model.indexOf(item); }
			);
			this.render(this.selection);
			this.selection.exit().remove();
		}	
	};
}

JEM.scaleToUnit = function(value,max) {
	return value / max;
}

JEM.scaledDegDiff = function(actual,expected,spread) {
	var max_diff = spread / 2;
	var diff = Math.abs(expected - actual);
	if (diff > 180) {
		diff = 360 - diff;
	}
	if (diff > max_diff) {
		return 0;
	} else {
		return 255 - Math.round(diff * 255 / max_diff);
	}
}

JEM.findAbsoluteDegree = function(x,y) {
	var degree = Math.atan(y/x) * 180 / Math.PI;
	if (x < 0) {
		degree += 180;
	} else if (y < 0) {
		degree += 360;
	}
	return Math.round(degree);
}

JEM.getRedValue = function(deg,radius) {
	var scaledDiff = JEM.scaledDegDiff(deg,0,270);
	return scaledDiff;
}

JEM.getGreenValue = function(deg,radius) {
	var scaledDiff = JEM.scaledDegDiff(deg,120,270);
	return scaledDiff;
}

JEM.getBlueValue = function(deg,radius) {
	var scaledDiff = JEM.scaledDegDiff(deg,240,270);
	return scaledDiff;
}

JEM.colorTransform = function(x,y,mx,my) {
	var x_length = (mx / 2);
	var y_length = (my / 2);
	var max_length = Math.min(x_length,y_length);
	var limit_x = Math.min(max_length,x - x_length);
	var limit_y = Math.min(max_length,y_length - y);
	var x = JEM.scaleToUnit(limit_x,x_length);
	var y = JEM.scaleToUnit(limit_y,x_length);
	var radius = Math.sqrt(Math.pow(x,2) + Math.pow(y,2));
	var deg = JEM.findAbsoluteDegree(x,y);
	var red = JEM.getRedValue(deg,radius);
	var green = JEM.getGreenValue(deg,radius); 
	var blue = JEM.getBlueValue(deg,radius);
	var alpha = radius;
	var value = "rgba("+red+","+green+","+blue+","+alpha+")";
	return value;
}

var height = 900;
var width = 900;

JEM.renderCircle = function(selection) {
	selection
	.enter()
	.append('g')
	.attr('class','node')
	.append('circle')
	.attr('cx',function(d) { return d.cx; })
	.attr('cy',function(d) { return d.cy; })
	.attr('r', function(d) { return d.r; })
	.attr('fill', function(d) { return JEM.colorTransform(d.cx,d.cy,width,height); });
}

d3.select('#graph-view').append('svg').attr('class','well');

var svg = d3.select('svg');

svg.attr('width',width)
     .attr('height',height);

var svg_nodes = svg.selectAll('g');

var nodes = [];
var circleView = JEM.createView(svg_nodes,nodes,JEM.renderCircle);

svg.on('click', function(e) {
	var mouse = d3.mouse(this);
	var circle = {cx:mouse[0], cy:mouse[1], r:'30px', fill:'red'};
	nodes.push(circle);
	circleView.update();
});
